:root {
  --Background: #f0f0f0;
  --Foreground: #000000;
}

/* Adjust the sphere size and its position */
.sphere {
  position: inherit;
  width: 160px;
  aspect-ratio: 1/1;
  z-index: -10;
  rotate: 1 0 0 15deg;
  transform-style: preserve-3d;
  animation: rotate 20s linear infinite 6s;
  margin-top: 8em;
}

.sphereContainer {
  position: inherit;
  width: 40vw;
  aspect-ratio: 1/1;
  z-index: -10;
  top: 50%;
  transform-style: preserve-3d;
}

/* Adjust the translate value for the circle container */
.sphere .circleContainer {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  translate: 0 40px 0; /* Adjusted from 70px */
}

/* If necessary, adjust the circle sizes (they are currently set to scale: 0 to 1, so they may not need adjustment) */
.sphere .circleContainer .circle {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 2px solid var(--Foreground); /* Optionally adjust border thickness */
  border-radius: 50%;
  rotate: 1 0 0 -90deg;
  scale: 0;
  animation:
    oscillateScale 2s ease infinite alternate,
    oscillateTranslate 4s linear infinite alternate,
    renderOpacity 0.2s linear infinite;
}

/* Adjust the after pseudo-element if necessary */
.sphere .circleContainer .circle::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: inherit;
  filter: blur(8px); /* Optionally adjust blur radius */
}
.sphere .circleContainer .circle:nth-of-type(1) {
  animation-delay: 2.1s;
}
.sphere .circleContainer .circle:nth-of-type(2) {
  animation-delay: 2.2s;
}
.sphere .circleContainer .circle:nth-of-type(3) {
  animation-delay: 2.3s;
}
.sphere .circleContainer .circle:nth-of-type(4) {
  animation-delay: 2.4s;
}
.sphere .circleContainer .circle:nth-of-type(5) {
  animation-delay: 2.5s;
}
.sphere .circleContainer .circle:nth-of-type(6) {
  animation-delay: 2.6s;
  border-color: rgb(102, 22, 22);
}
.sphere .circleContainer .circle:nth-of-type(7) {
  animation-delay: 2.7s;
}
.sphere .circleContainer .circle:nth-of-type(8) {
  animation-delay: 2.8s;
}
.sphere .circleContainer .circle:nth-of-type(9) {
  animation-delay: 2.9s;
}
.sphere .circleContainer .circle:nth-of-type(10) {
  animation-delay: 3s;
}
.sphere .circleContainer .circle:nth-of-type(11) {
  animation-delay: 3.1s;
}
.sphere .circleContainer .circle:nth-of-type(12) {
  animation-delay: 3.2s;
}
.sphere .circleContainer .circle:nth-of-type(13) {
  animation-delay: 3.3s;
}
.sphere .circleContainer .circle:nth-of-type(14) {
  animation-delay: 3.4s;
  border-color: rgb(28, 106, 121);
}
.sphere .circleContainer .circle:nth-of-type(15) {
  animation-delay: 3.5s;
}
.sphere .circleContainer .circle:nth-of-type(16) {
  animation-delay: 3.6s;
}
.sphere .circleContainer .circle:nth-of-type(17) {
  animation-delay: 3.7s;
}
.sphere .circleContainer .circle:nth-of-type(18) {
  animation-delay: 3.8s;
}
.sphere .circleContainer .circle:nth-of-type(19) {
  animation-delay: 3.9s;
}
.sphere .circleContainer .circle:nth-of-type(20) {
  animation-delay: 4s;
}
.sphere .line {
  position: absolute;
  top: 50%;
  width: 100%;
  height: 2px;
  background: 50% 0%/200% 100%
    linear-gradient(
      to right,
      transparent 0%,
      var(--Foreground) 33.3%,
      var(--Foreground) 66.6%,
      transparent 100%
    );
  width: 0%;
  animation:
    render 0.2s linear infinite,
    revealWidth 1s linear forwards;
}
.sphere .line::after {
  content: "";
  position: absolute;
  width: 100%;
  height: 300%;
  background: inherit;
  filter: blur(12px);
}

.sphere .line:nth-of-type(1) {
  animation-delay: 3.7241097729s;
}
.sphere .line:nth-of-type(2) {
  animation-delay: 3.2152198545s;
}
.sphere .line:nth-of-type(3) {
  animation-delay: 2.644032055s;
}
.sphere .line:nth-of-type(4) {
  animation-delay: 2.7071149165s;
}
.sphere .line:nth-of-type(5) {
  animation-delay: 2.9663503951s;
}
.sphere .line:nth-of-type(6) {
  animation-delay: 2.4269914245s;
}

@keyframes revealWidth {
  100% {
    width: 100%;
  }
}
@keyframes revealOpacity {
  100% {
    opacity: 1;
  }
}
@keyframes revealTranslate {
  100% {
    translate: 0px 0px 0px;
  }
}
@keyframes render {
  100% {
    background-position: -150% 0%;
  }
}
@keyframes renderOpacity {
  100% {
    opacity: 0;
  }
}
@keyframes oscillateScale {
  100% {
    scale: 1;
  }
}
@keyframes oscillateTranslate {
  100% {
    translate: 0 -150px 0;
  }
}
@keyframes rotate {
  100% {
    transform: rotateY(360deg) rotateZ(360deg);
  }
}
